#include <stdio.h>

void merge(int a[], int lb, int mid, int ub);

void mergeSort(int a[], int lb, int ub) {
    if (lb < ub) {
        int mid = (lb + ub) / 2;
        mergeSort(a, lb, mid);
        mergeSort(a, mid + 1, ub);
        merge(a, lb, mid, ub);
    }
}

void merge(int a[], int lb, int mid, int ub) {
    int n1 = mid - lb + 1;
    int n2 = ub - mid;
    int left[n1], right[n2];
    
    for (int i = 0; i < n1; i++)
        left[i] = a[lb + i];
    for (int j = 0; j < n2; j++)
        right[j] = a[mid + 1 + j];
    
    int i = 0, j = 0, k = lb;
    
    while (i < n1 && j < n2) {
        if (left[i] <= right[j]) {
            a[k] = left[i];
            i++;
        } else {
            a[k] = right[j];
            j++;
        }
        k++;
    }
    
    while (i < n1) {
        a[k] = left[i];
        i++;
        k++;
    }
    
    while (j < n2) {
        a[k] = right[j];
        j++;
        k++;
    }
}

int main() {
    int a[] = {34, 55, 7, 12, 55};
    int n = sizeof(a) / sizeof(a[0]);
    
    printf("Original array: ");
    for (int i = 0; i < n; i++)
        printf("%d ", a[i]);
    
    mergeSort(a, 0, n - 1);
    
    printf("\nSorted array: ");
    for (int i = 0; i < n; i++)
        printf("%d ", a[i]);
    
    return 0;
}
