#include <stdio.h>


int findMax(int A[], int n) {
    int max = A[0];
    for (int i = 1; i < n; i++) {
        if (A[i] > max) {
            max = A[i];
        }
    }
    return max;
}


void countingSort(int A[], int n, int exp) {
    int output[n];
    int count[10] = {0};

   
    for (int i = 0; i < n; i++) {
        count[(A[i] / exp) % 10]++;
    }

   
    for (int i = 1; i < 10; i++) {
        count[i] += count[i - 1];
    }

    
    for (int i = n - 1; i >= 0; i--) {
        output[count[(A[i] / exp) % 10] - 1] = A[i];
        count[(A[i] / exp) % 10]--;
    }

   
    for (int i = 0; i < n; i++) {
        A[i] = output[i];
    }
}


void radixSort(int A[], int n) {
    int max = findMax(A, n);

    for (int exp = 1; max / exp > 0; exp *= 10) {
        countingSort(A, n, exp);
    }
}

int main() {
    int A[] = {170, 45, 75, 90, 802, 24, 2, 66};
    int n = sizeof(A) / sizeof(A[0]);

    printf("Original array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", A[i]);
    }

    radixSort(A, n);

    printf("\nSorted array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", A[i]);
    }

    return 0;
}

